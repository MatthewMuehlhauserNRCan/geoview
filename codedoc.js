function sleep(e){const t=Date.now();let l=null;do{l=Date.now()}while(l-t<e)}function createCodeSnippet(){sleep(500);const e=Array.prototype.filter.call(document.getElementsByTagName("script"),(e=>null===e.getAttribute("id"))),t=e[e.length-1];for(let e=0,l=!0;l;e++){const n=document.getElementById(`codeSnippet${e||""}`);null!==n?n.innerHTML=`<pre>${t.textContent.replace("//create snippets\n","").replace("createConfigSnippet();\n","").replace("createCodeSnippet();\n","")}</pre>`:l=!1}}function createCodeSnippetUsingIDs(){sleep(500);const e=Array.prototype.filter.call(document.getElementsByTagName("script"),(e=>null!==e.getAttribute("id")));for(let t=0;t<e.length;t++){const l=e[t];document.querySelectorAll(`[id-script="${l.id}"]`).forEach((e=>{e.innerHTML=`<pre>${l.textContent}</pre>`}))}}function createConfigSnippet(){sleep(500);let e=0;for(e=0;e<document.getElementsByClassName("geoview-map").length;e++){let t="";const l=document.getElementsByClassName("geoview-map")[e].id;t=document.getElementById(l).attributes["data-config"];const n=document.getElementById(`${l}CS`);try{if(void 0!==t&&null!==n){const e=t.value.split(/(?<!\\)'/gm).map(((e,t)=>t%2?e.replaceAll(/\/\*/gm,String.fromCharCode(1)).replaceAll(/\*\//gm,String.fromCharCode(2)):e)).join("'").replaceAll(/\/\*(?<=\/\*)((?:.|\n|\r)*?)(?=\*\/)\*\//gm,"").replaceAll(String.fromCharCode(1),"/*").replaceAll(String.fromCharCode(2),"*/");n.textContent=JSON.stringify(JSON.parse(e.replace(/(\r\n|\n|\r)/gm,"").replace(/(?<!\\)'/gm,'"').replace(/\\'/gm,"'")),void 0,2)}}catch(e){console.log("Error trapped in createConfigSnippet")}}createCollapsible()}function createCollapsible(){const e=document.getElementsByClassName("collapsible");let t;for(t=0;t<e.length;t++){const l=e[t].nextElementSibling;e[t].classList.contains("active")?l.style.display="block":l.style.display="none",e[t].addEventListener("click",(function(){this.classList.toggle("active"),this.classList.contains("active")?l.style.display="block":l.style.display="none"}))}}function addLog(e,t){const l=document.getElementById(e);l.innerText+=`${t}\n`,l.scrollTop=l.scrollHeight}function addDefaultShapes(e,t){e.layer.geometry.setActiveGeometryGroup(t),e.layer.geometry.addCircle([-98.94,57.94],{style:{strokeColor:"purple",strokeWidth:2}}),e.layer.geometry.addMarkerIcon([-105.78,57.52]),e.layer.geometry.addPolyline([[-106.17,63.99],[-104.46,62.55],[-102.26,56.44]],{style:{strokeColor:"blue",strokeWidth:2}}),e.layer.geometry.addPolygon([[[-96.71,64.41],[-93.1,62.86],[-94.36,56.67],[-96.71,64.41]]],{style:{strokeColor:"green",strokeWidth:2}})}function addSpecialShapes(e,t){e.layer.geometry.setActiveGeometryGroup(t),e.layer.geometry.addPolygon([[[-86.06,62.59],[-78.29,62.59],[-80.43,55.73],[-86.06,62.59]]],{style:{strokeColor:"red",strokeWidth:2}})}function listenToLegendLayerSetChanges(e,t){const l=t.split("/")[0];cgpv.api.maps[l].layer.legendsLayerSet.onLayerSetUpdated(((t,l)=>{const{resultSet:n}=l,o='<table class="state"><tr class="state"><th class="state">Name</th><th class="state">Status</th></tr>',r=document.getElementById(e),a=Object.keys(n).reduce(((e,t)=>{const l=n[t]?.layerName||"",{layerStatus:o}=n[t];return`${e}<tr class="state"><td class="state">${l}</td><td class="state">${o}</td></tr>`}),o);r.innerHTML=a&&a!==o?`${a}</table>`:""}))}